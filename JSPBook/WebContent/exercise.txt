 01장 JSP 개요 : 원리를 이해하고 개발 환경 구축하기.
 	01. 정적 웹 페이지와 동적 웹 페이지의 차이점을 설명하시오.
 		- 정적 웹 페이지는 컴퓨터에 저장된 텍스트 파일을 그대로 보는 것이고, 동적 웹 페이지는 저장된 내용을 다른 변수로 가공 처리하여 보는 것이다.
 		 정적 웹 페이지는 Html과 같은 웹 언어로 작성하고, 동적 웹 페이지는 PHP, ASP, JSP와 같은 웹 언어로 작성한다.
 		 정적 웹 페이지는 미리 만들어놓은 정보만 보여주기 때문에 고객의 취향이나 변화에 적응할 수 없고, 새로운 것을 추가, 수정, 삭제하는
 		 작업을 모두 수동으로 처리해야 하기 때문에 관리가 어려움. 하지만, 동적인 요소가 없기 때문에 DB도 필요없고 구축하기 쉬우며, 단순 문서로만 
 		 이루어져 있어 서버간 통신이 거의 없고 속도가 빠름. 또한 정적 문서로만 이루어져 있기 때문에 모든 호스팅 서버에서도 동작할 수 있다는 장점.
 		 그러나 기술이 발전함에 따라 사용자의 기호에 맞게 능동적으로 변화하는 웹 페이지가 필요해져서 이를 위해 동적 웹 페이지를 제공하는
 		 PHP, ASP, JSP와 같은 언어가 개발됨. 현재 우리가 보는 대부부ㅠㄴ의 휍 페이지는 동적 웹 페이지라고 할 수 있다.
 		 동적 웹 페이지는 사용자가 웹 페이지에 글을 작성하거나 환경 설정 등을 봐꾸면 그 내용이 서버에 있는 db에 저장되고 결과가 웹 페이지에 반영되는
 		 형태로 동작합니다.
 		 
 	02. 웹 프로그래밍 언어JSP의 특징을 설명하시오.
 		-1)jsp는 서블릿 기술의 확장이다
 			jsp에서는 서블릿의 모든 기능을 사용할 수 있음. 즉 서블릿과 마찬가지로 jdbc,jndo,ejb등을 모두 포함하고 있는 강력한 엔터프라이즈 자바 api를 사용할
 			수 있음. 또한 쉽게 개발할수있도록jsp에서 미리 정의된 태그, 표현식 언어와 사용자 정의 태그를 사용할 수 있음.
 		-2) jsp는 유지 관리가 용의함.
 			서블릿 기술에는 프리젠테이션 로직과 비즈니스 로직이 섞여 있지만 jsp기술의 경우 프레젠테이션 로직과 비즈니스 로직을 분리가능하기 때문에 관리가 쉬움
 		-3) 빠른 개발이 가능
 			코드를 수정했을 때 서블릿에서는 업데이트를 하고 다시 컴파일해야함. 그러나 jsp의 경우 다시 컴파일하고 프로젝트를 배포할 필요없음.
 		-4) 코드의 길이를 줄일 수 있다.
 			jsp에서는 엑션태그, jstl, 사용자 정의 태그 등의 다양한 태그와 표현언어, 내장객체 등을 사용함으로써 서블릿보다 코드를 줄일 수 있음.
 			
 	03. jsp페이지의 처리과정을 설명하시오.
 	
 		1)웹 브라우저가 웹 서버에 jsp요청
 		웹 서버는 요청된 hello.jsp에서 jsp확장자를 발견하여 jsp페이지임을 확인하고 웹 서버에 있는 jsp컨테이너에 전달,
 		2)jsp컨테이너는 jsp페이지를 서블릿 프로그렘인 hello_jsp.java로 변환
 		3)jsp 컨테이너가 서블릿 프로그램을 컴파일하여 hello_jsp.class로 만들고 이를 웹 서버에 전달합니다.
 		4) 웹 서버는 정적 웹 페이지처럼 .class의 실행 결과를 웹 브라우저에 응답으로 전달하므로 웹 브라우저는 새로 가공된 html페이지를 동적으로 
 		  처리한 결과를 보여줌.
 		 
 ---------------------------------------------------------------------------------------------------------------------------------------
 02장 스크립트 태그: 시작 페이지 만들기
 	01. 스크립트 태그의 세가지 종류에 대해 간단히 설명하시오.
 		1) 선언문 태그
 		
 		선언문 태그에 선언된 변수와 메서드는 jsp 페이지 임의의 위치에서 선언할 수 있으며, 스크립틀릿 태그보다 나중에 선언해도
 		스크립틀릿 태그에서 사용할 수 있다. 선언문 태그로 선언된 변수는 전역 변수로 사용되고, 선언문 태그로 선언된 메서드는 전역 변수처럼 
 		전역 메서드로 사용됨.
 		
 		2) 스크립틀릿 태그
 		
 		스크립틀릿 태그는 out 객체를 사용하지 않고도 쉽게 html응답을 만들어낼 수 있음.
 		가장 일반적으로 사용되며 변수 또는 메서드 선언, 유효식 등 다수를 포함할 수 있음.
 		모든 텍스트, html태그, 또는 jsp요소는 스크립틀릿 태그 외부에 있어야함.
 		
 		3) 표현문태그
 		
 		표현문 태그를 이용하여 선언문 태그 또는 스크립틀릿 태그에서 선언된 변수나 메서드의 반환 값을 외부로 출력 가능
 		표현문 태그는 스크립틀릿 태그에서 사용할 수 없으므로 이 경우에는 out.println 메서드를 사용해야 함.
 		표현문 태그에 숫자, 문자 등의 기본 데이터 타입과 자바 객체 타입도 사용가능. 그리고 표현문 태그에 작성된 모든 자바 코드의 값은 
 		문자열로 변환되어 웹 브라우저에 출력됨.
 		
 	02. 선언문 태그와 스크립틀릿 태그의 차이점
 	
 		선언문 태그
 		-변수뿐만 아니라 메서드를 선언가능
 		-서블릿 프로그램으로 변환될 때 jspService()메서드 외부에 배치
 		
 		스크립틀릿 태그
 		- 스크립틀릿 태그는 메서드 없이 변수만을 선언할 수 있음
 		- 서블릿 프로그램으로 변환될 때 jspService메서드 내부에 배치
 		
 	03. 애플리케이션 실행 결과에는 보이지 않는 jsp 주석 표기법
 		<%-- -->
 		
 
 03장 디렉티브 태그: 한글 출력 및 페이지 모듈화 하기
 	
 	01. 디렉티브 태그의 세 가지 유형에 대해 간단히 설명하시오.
 		
 		page(<%@page... %>) : jsp페이지에 대한 정보 설정
 		include (<%@include... %>) : jsp페이지의 특정 영역에 다른 문서를 포함
 		 taglib(<%@taglib... %>) : jsp 페이지에서 사용할 태그 라이브러리를 설정
 		 
 	02. jsp 페이지가 사용할 자바 클래스를 설정하기 위한 page디렉티브 태그의 속성 : import
 	
 	03. jsp 페이지의 특정 영역에 외부 파일의 내용을 포함하는 디렉티브 태그 : include
 	
 	
 
 04장 액션태그
 
 	01. 자바빈즈 클래스
 		-vo와 같은 데이터를 저장할 공간
 	
 	02. 페이지 이동방식
 	
 		1)forward
 			- request, response가 1개씩 존재
 			- 최초의 담겨져 넘어온 파라미터는 최초의 생성된 request에 담겨져 있으므로 응답으로 내보내질 때,
 			  해당 parameter를 담아 보낼 때 request scope영역에 담아 보낼 수 있고 값을 꺼낼 수 있다.
 			- 응답으로 나가는 리턴 페이지 값은 url이 아닌 페이지 경로가 된다.
 			- 주로 데이터를 가용하여 페이지를 요청하는 요청이 아닌 단순히 페이지만을 요청하는 처리일 때 페이지 이동방식 forward를 활용
 			
 		2) redirect
 			- request, response가 2개씩 존재 ( 꼭2개는 아님, 새로운request가 생성된단 뜻)
 			- 최초 요청 url에 담겨져 넘어온 parameter는 새롭게 만들어진 request에서 사용불가
 			- 최초 요청 url에 담겨져 넘어온 parameter를 이용하여 새롭게 요청된 url에 request scope 영역에 담아 해당 페이지로 응답할때,
 			  새롭게 만들어진 request scope에서는 값을 꺼낼수 없으므로, session scope를 활용하여 값을 꺼내야함.
 			- 응답으로 나가는 리턴 페이지 값은 페이지 경로가 아닌 url경로가 된다.
 			- redirect를 활용하는 경우는 다양한 로직(상황)에 따라 부여되는 페이지 이동방식이 다르겠지만, 주로 데이터를 가용하거나 변형한
 			  후에 데이터를 가용하고 변형하는 기능이 재 요청되지 않도록 하기 위해서 redirect인 페이지 이동방식을 활용한다.
 			